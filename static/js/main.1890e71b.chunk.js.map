{"version":3,"sources":["Input.js","Timer.js","Deadline.js","App.js","reportWebVitals.js","index.js"],"names":["Input","onclick","onchange","className","onChange","placeholder","onClick","Timer","days","hours","minutes","seconds","Deadline","date","App","props","e","setState","input","target","value","console","log","state","diff","Date","getTime","window","alert","Intrvl","setInterval","D","Math","floor","H","M","S","timeUp","clearInterval","this","React","Component","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4PAceA,MAXf,YAAmC,IAAnBC,EAAkB,EAAlBA,QAAQC,EAAU,EAAVA,SAEpB,OACI,gCACI,uBAAOC,UAAU,OAAOC,SAAUF,EAASG,YAAY,qBACvD,wBAAQF,UAAU,OAAOG,QAASL,EAAlC,6B,MCgBGM,MApBf,YAA6C,IAA7BC,EAA4B,EAA5BA,KAAKC,EAAuB,EAAvBA,MAAMC,EAAiB,EAAjBA,QAAQC,EAAS,EAATA,QAE/B,OACI,sBAAKR,UAAU,iBAAf,UACI,sBAAKA,UAAU,aAAf,UACI,oBAAIA,UAAU,MAAd,SAAqBK,IAAU,wCAEnC,sBAAKL,UAAU,aAAf,UACI,oBAAIA,UAAU,MAAd,SAAsBM,IAAW,yCAErC,sBAAKN,UAAU,aAAf,UACI,oBAAIA,UAAU,MAAd,SAAsBO,IAAa,2CAEvC,sBAAKP,UAAU,QAAf,UACI,oBAAIA,UAAU,MAAd,SAAsBQ,IAAa,+CCTpCC,MAPf,YAA0B,IAAPC,EAAM,EAANA,KACf,OACI,qBAAKV,UAAU,WAAf,SAA2B,sDAAuBU,QCsD3CC,E,kDAnDb,WAAYC,GAAQ,IAAD,8BACjB,cAAMA,IAURX,SAAS,SAACY,GACN,EAAKC,SAAS,CAAEC,MAAOF,EAAEG,OAAOC,QAChCC,QAAQC,IAAI,EAAKC,MAAML,QAbR,EAgBnBZ,QAAQ,WACN,IAEIkB,EAFa,IAAIC,KAAK,EAAKF,MAAML,OAAOQ,WAChC,IAAID,MAAOC,UAEvB,GAAGF,EAAK,EACNG,OAAOC,MAAM,4BAGf,IAAIC,EAAOC,aAAY,WACrBN,GAAU,IACV,IAAIO,EAAEC,KAAKC,MAAMT,EAAK,OAClBU,EAAEF,KAAKC,MAAOT,EAAK,MAAN,MACbW,EAAEH,KAAKC,MAAOT,EAAK,KAAN,KACbY,EAAEJ,KAAKC,MAAOT,EAAK,IAAW,KAClC,EAAKP,SAAS,CAACT,KAAMuB,EAAEtB,MAAMyB,EAAExB,QAAQyB,EAAExB,QAAQyB,IAAI,kBAAK,EAAKC,OAAOR,QACrE,MA/Bc,EAkCnBQ,OAAO,SAACtB,GACF,EAAKQ,MAAMf,KAAK,EAAKe,MAAMd,MAAM,EAAKc,MAAMb,QAAQ,EAAKa,MAAMZ,UAAW,GAC5E2B,cAAcvB,IAlChB,EAAKQ,MAAM,CACPL,MAAO,GACPV,KAAM,EACNC,MAAM,EACNC,QAAQ,EACRC,QAAQ,GAPK,E,0CAwCnB,WACE,OACE,sBAAKR,UAAU,MAAf,UACE,cAAC,EAAD,CAAUU,KAAM0B,KAAKhB,MAAML,QAC3B,cAAC,EAAD,CAAOV,KAAM+B,KAAKhB,MAAMf,KAAMC,MAAO8B,KAAKhB,MAAMd,MAAOC,QAAS6B,KAAKhB,MAAMb,QAASC,QAAS4B,KAAKhB,MAAMZ,UACxG,cAAC,EAAD,CAAOV,QAASsC,KAAKjC,QAASJ,SAAUqC,KAAKnC,kB,GA9CnCoC,IAAMC,WCMTC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.1890e71b.chunk.js","sourcesContent":["import React from 'react';\n\n\nfunction Input({onclick,onchange}){\n\n    return(\n        <div>\n            <input className=\"read\" onChange={onchange}placeholder=\"MM-DD-YYYY,HH:MM\"></input>\n            <button className=\"read\" onClick={onclick}>Start Timer</button>\n        </div>\n    )\n}\n\n\nexport default Input;","import React from 'react';\nimport './timer.css';\n\n\nfunction Timer({days,hours,minutes,seconds}){\n\n    return(\n        <div className=\"flex-container\">\n            <div className=\"timer line\">\n                <h1 className=\"num\">{days}</h1><p>Days</p>\n            </div>\n            <div className=\"timer line\">\n                <h1 className=\"num\" >{hours}</h1><p>Hours</p>\n            </div>\n            <div className=\"timer line\">\n                <h1 className=\"num\" >{minutes}</h1><p>Minutes</p>\n            </div>\n            <div className=\"timer\">\n                <h1 className=\"num\" >{seconds}</h1><p>Seconds</p>\n            </div>\n        </div>\n    )\n}\n\nexport default Timer;","import React from 'react';\n\nfunction Deadline({date}){\n    return(\n        <div className=\"deadline\" ><h2>{`Timer Ends on: ${date}`}</h2></div>\n    )\n}\n\n\nexport default Deadline;","import React from 'react';\nimport './App.css';\nimport Input from './Input';\nimport Timer from './Timer';\nimport Deadline from './Deadline';\n\nclass App extends React.Component{\n  constructor(props) {\n    super(props);\n    this.state={\n        input: \"\",\n        days: 0,\n        hours:0,\n        minutes:0,\n        seconds:0\n    };\n  }\n\n  onChange=(e)=>{\n      this.setState({ input: e.target.value});\n      console.log(this.state.input);\n  }\n\n  onClick=()=>{\n    let deadLineTime=new Date(this.state.input).getTime();\n    let timeNow=new Date().getTime();\n    let diff=deadLineTime-timeNow;\n    if(diff<0){\n      window.alert(\"Enter a future date\");\n      return;\n    }\n    let Intrvl=setInterval(() => {\n      diff=diff-1000;\n      let D=Math.floor(diff/(1000*60*60*24));\n      let H=Math.floor((diff%(1000*60*60*24))/(1000*60*60));\n      let M=Math.floor((diff%(1000*60*60))/(1000*60));\n      let S=Math.floor((diff%(1000*60))/1000);\n      this.setState({days: D,hours:H,minutes:M,seconds:S}, ()=> this.timeUp(Intrvl));\n    }, 1000);\n  }\n\n  timeUp=(props)=>{\n    if((this.state.days+this.state.hours+this.state.minutes+this.state.seconds)===0){\n      clearInterval(props);\n    }\n  }\n  \n  render(){\n    return (\n      <div className=\"App\">\n        <Deadline date={this.state.input}/>\n        <Timer days={this.state.days} hours={this.state.hours} minutes={this.state.minutes} seconds={this.state.seconds} />\n        <Input onclick={this.onClick} onchange={this.onChange}/>\n      </div>\n    )\n  }\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}